You will work in groups 2/3. Only one submission is required each group. Please add the names
of all partners as a comment in your submissions.

1. Write a program to assign passengers seats in an airplane. Assume a small airplane with seat
numberings as follows:

    1  A  B  C  D
    2  A  B  C  D
    3  A  B  C  D
    4  A  B  C  D
    5  A  B  C  D
    6  A  B  C  D
    7  A  B  C  D

The program should display the seat patter, with an 'X' marking the seats already assigned.
For example, after seats 1A, 2B, and 4C are taken, the display should look like the following:

    1  X  B  C  D
    2  A  X  C  D
    3  A  B  C  D
    4  A  B  X  D
    5  A  B  C  D
    6  A  B  C  D
    7  A  B  C  D

After displaying the seats available, the program should prompt for the seat desired, 
the user can type in a seat, and then the display of available seats should be updated. 
This continues until all seats are filled or until the user signals that the program should end. 
If the user types in a seat that is already assigned, the program should say that that seat is occupied
 and ask for another choice.

2. Traditional password entry schemes are susceptible to “shoulder surfing” in which an attacker watches 
an unsuspecting user enter his or her password or PIN number and uses it later to gain access to the account.
One way to combat this problem is with a randomized challenge-response system. In these systems, the user enters 
different information every time based on a secret in response to a randomly generated challenge. Consider the 
following scheme in which the password consists of a five-digit PIN number (00000 to 99999). Each digit is assigned 
a random number that is 1, 2, or 3. The user enters the random numbers that correspond to their PIN instead of 
their actual PIN numbers.

For example, consider an actual PIN number of 12345. To authenticate it, the user would be presented with a 
screen such as the following:

    PIN: 0 1 2 3 4 5 6 7 8 9
    NUM: 3 2 3 1 1 3 2 2 1 3

The user would enter 23113 instead of 12345. This does not divulge the password even if an attacker intercepts 
the entry because 23113 could correspond to other PIN numbers, such as 69440 or 70439. The next time the user 
logs in, a different sequence of random numbers would be generated, such as the following:

    PIN: 0 1 2 3 4 5 6 7 8 9
    NUM: 1 1 2 3 1 2 2 3 3 3

Your program should simulate the authentication process. Store an actual PIN number in your program. The 
program should use an array to assign random numbers to the digits from 0 to 9. Output the random digits to
 the screen, input the response from the user, and output whether or not the user’s response correctly matches 
 the PIN number.